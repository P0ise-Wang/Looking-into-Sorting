{"version":3,"sources":["aItem/item.js","insertSort/itemList.js","insertSort/isCodeBox.js","aCode/code.js","insertSort/CodeBox.js","insertSort/insertApp.js","bubbleSort/itemList.js","bubbleSort/bsCodeBox.js","bubbleSort/CodeBox.js","bubbleSort/bubbleApp.js","selectSort/itemList.js","selectSort/ssCodeBox.js","selectSort/CodeBox.js","selectSort/selectApp.js","quickSort/itemList.js","quickSort/qsCodeBox.js","quickSort/CodeBox.js","quickSort/quickApp.js","mergeSort/item.js","mergeSort/itemList.js","mergeSort/msCodeBox.js","mergeSort/CodeBox.js","mergeSort/mergeApp.js","Visualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["Item","percent","this","props","value","max","react_default","a","createElement","className","style","width","color","height","Component","ItemList","arr","itemList","i","length","index","sorting","item","src_aItem_item","key","w","push","IsCodeBox","id","Code","highLightFlag","CodeBox","preCodeArr","codebox","flag","hlp","code","aCode_code","codeBox","InsertApp","proprs","_this","Object","classCallCheck","_super","call","getValue","event","console","log","target","speed","randomArr","oArr","state","n","r","timeID","interval","resetArr","initMeansRandom","initMeansInput","speeds","arrStates","insertionSort","slice","Math","floor","random","stop","setState","_this2","insertSort_itemList","action","type","onClick","start","init","stop2","nextstep","laststep","changeInitMeansRandom","changeInitMeansInput","onChange","e","map","ele","display","placeholder","maxLength","size","getUserInput","count","parseInt","$","val","insertSort_CodeBox","isCodeBox","split","len","j","_this3","x","setInterval","sort","_arrStates$this$state","changing","highlight","_arrStates$this$state2","index_insert","temp0","temp1","temp3","tempVal","temp2","_this4","revSort","clearInterval","p","BsCodeBox","BubbleApp","bubbleSort_itemList","bubbleSort_CodeBox","bsCodeBox","bubbleSort","index1","index2","complete","temp","SsCodeBox","SelectApp","k","mixIndex","minValue","selectSort_itemList","selectSort_CodeBox","ssCodeBox","selectionSort","index3","minId","QsCodeBox","QuickApp","quickSort_itemList","quickSort_CodeBox","qsCodeBox","quickSortStates","pivot","qsHelper","end","partition","temp5","temp6","temp4","mergeSort_item","MsCodeBox","MergeApp","arrC","mergeSort_itemList","mergeSort_CodeBox","msCodeBox","mergeSort","stateC","mergeSortHelper","mid","merge","Visualizer","mode","rendering","sortingClicked","aicount","changeRenderingState","bind","assertThisInitialized","renderObj","bubbleApp","setVisualizerRendering","getFunctions","insertApp","selectApp","quickApp","mergeApp","data-toggle","Fragment","disabled","currentAlgorithm","App","src_Visualizer_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.733c9956.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../aItem/item.css';\nimport '../aCss/color.css';\n\nclass Item extends Component{\n    \n    render() {\n\n        var percent = (1-this.props.value / this.props.max)*100;\n        // var width = 450/this.props.w;\n        return (\n            <div className=\"shape position\" style={{ width: \"30px\" }}>\n                <div className={\"fill \"+this.props.color}>\n                    <div className=\"_background\"  style={{ height: percent+\"%\" }}></div>\n                </div>\n                <div className=\"arrayValue\">\n                    {this.props.value}\n                </div>\n            </div>\n          );\n    }\n\n  \n}\n\nexport default Item;","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Item from '../aItem/item';\n\n\nclass ItemList extends Component {\n\n    itemList(arr){\n\n        var itemList = [];\n        for(var i = 0; i < arr.length; i++){\n            var color = \"_arr\";\n            if(i===this.props.index[1]){\n                color = \"_indexp\";\n            }\n            if(i <= this.props.index[0] && i !== this.props.index[1]){\n                color = \"_complete\";\n            }\n            if(this.props.sorting===0){\n                color = \"_arr\";\n            }\n            var item = (\n                <Item key={i} value={arr[i]} max={this.props.max} color={color} w={this.props.arr.length}></Item>\n            );\n            itemList.push(item);\n        }\n        return itemList;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"canvas _background\">\n                {this.itemList(this.props.arr)}\n            </div>\n        );\n    }\n}\n\nexport default ItemList;","import React, { Component } from 'react';\r\nimport '../aCss/app.css';\r\n\r\nclass IsCodeBox extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"CodeBox2\"  id=\"scrollbar\">\r\n                <code className=\"code\">void insertionSort(int a[], int n)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;int i, j;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;for (i = 1; i &lt; n; i++)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;int elem = a[i]; </code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;for (j = i - 1; j &gt;= 0; j--)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (elem &gt; a[j]) a[j + 1] = a[j]; </code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j] = elem;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&#125;</code>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IsCodeBox;","import React, { Component } from 'react';\nimport '../aCss/app.css';\n\nclass Code extends Component{\n    \n    render() {\n\n        return (\n            <code className={\"code \"+this.props.highLightFlag}>{this.props.value}</code>\n          );\n    }\n\n  \n}\n\nexport default Code;","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Code from '../aCode/code';\n\n\nclass CodeBox extends Component {\n\n    codeBox(preCodeArr){\n\n        var codebox = [];\n        for(var i = 0; i < preCodeArr.length; i++){\n            var flag = \"\";\n            if(i===this.props.hlp){\n                flag = \"_h\";\n            }\n            if(i !== this.props.hlp){\n                flag = \"\";\n            }\n            if(this.props.sorting===0){\n                flag = \"\";\n            }\n            var code = (\n                <Code key={i} value={preCodeArr[i]} highLightFlag={flag}></Code>\n            );\n            codebox.push(code);\n        }\n        return codebox;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"CodeBox1\" id=\"scrollbar\">\n                {this.codeBox(this.props.preCodeArr)}\n            </div>\n        );\n    }\n}\n\nexport default CodeBox;","import React, { Component } from 'react';\nimport '../aCss/app.css';\nimport ItemList from './itemList';\nimport IsCodeBox from './isCodeBox';\nimport $ from \"jquery/dist/jquery.min\";\nimport CodeBox from './CodeBox';\n\nclass InsertApp extends Component {\n\n  constructor(proprs) {\n    super(proprs);\n    var n = 15;\n    var r = 50;\n    var speed = 500;\n    var arr = this.randomArr(n, r);\n    var oArr = [];\n    for (var i=0; i<n; i++){\n      oArr[i] = arr[i];\n    }\n    var preCodeArr = ['for i = 1 to i = 末尾元素位置: // a[i]是待插入元素',\n                      '\\xa0\\xa0for j = i - 1 to j = 0: // a[j]是当前要与a[i]比较的元素',\n                      '\\xa0\\xa0\\xa0\\xa0if 待插入元素a[i] < 当前元素a[j]: 将a[j]右移一位',\n                      '\\xa0\\xa0\\xa0\\xa0else: 插入元素a[i], 跳出当前循环'];\n    // var arrStates = this.insertionSort(arr.slice());\n    this.state = {                       \n      arr: arr,\n      n: n,\n      r: r,\n      timeID: 0,\n      index: [],\n      interval: speed,\n      sorting: 0,\n      resetArr: oArr,\n      initMeansRandom: 'none',\n      initMeansInput: 'none',\n      speeds:['慢速', '中速', '极速'],\n      preCodeArr: preCodeArr,\n      arrStates: this.insertionSort(arr.slice()),\n      hlp: -1,\n      id:0\n    }\n  }\n\n  randomArr(n, r) {\n    var arr = [];\n    for (var i = 0; i < n; i++) {\n      var value = Math.floor(Math.random() * r) + 1;\n      arr.push(value)\n    }\n    return arr;\n  }\n\n  init() {\n    this.stop();\n    var arr = [];\n    for (var i=0; i<this.state.n; i++){\n      arr[i] = this.state.resetArr[i];\n    }\n    this.setState({\n      arr: arr,\n      arrStates: this.insertionSort(arr.slice()),\n      n: this.state.n,\n      timeID: 0,\n      index: [],\n      interval: this.state.interval,\n      sorting: 0,\n      id: 0,\n      hlp: -1\n    });\n  }\n  \n  changeInitMeansInput(){\n    this.setState({\n      initMeansInput: 'block',\n      initMeansRandom: 'none'\n    });\n  }\n\n  changeInitMeansRandom(){\n    this.setState({\n      initMeansInput: 'none',\n      initMeansRandom: 'block'\n    });\n  }\n  \n  render() {\n    return (\n      <div  className=\"app\">\n        <div className=\"Visualizer\">\n          <div className={\"tutorial\"+this.state.sorting}><code>i = {this.state.index[0]}, 待插入元素a[i] = {this.state.arr[this.state.index[2]]}, 比较元素a[j] = {this.state.arr[this.state.index[2]-1]}</code></div>\n          <div className=\"canvas\">\n            <ItemList arr={this.state.arr} max={this.state.r} index={this.state.index} sorting={this.state.sorting}></ItemList>\n          </div>\n          <div className=\"buttons\">\n              <form action=\"insertApp.js\">\n                  排序：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.start()}>插入排序</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.init()}>重置</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.stop2()}>暂停</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  单步：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.nextstep()}>下一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.laststep()}>上一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <br></br><br></br>\n                  生成数组方式：&nbsp;\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansRandom()}>随机化生成</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansInput()}>自定义数组</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                  排序速度：&nbsp;\n                    <select onChange={(e)=>this.getValue(e)}>\n                      {\n                        this.state.speeds.map((ele,index)=>{\n                          return(\n                            <option key={index}>{ele}</option>\n                          )\n                        })\n                      }\n                    </select>\n                    <br></br><br></br>\n                  <div id=\"console1\" style={{display: this.state.initMeansInput}}>\n                  请输入生成数组元素：<input placeholder=\"请输入至多20个不大于50的数字，用空格分隔\" maxLength = \"100\" size=\"50\" id=\"inputArray\"/>\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.getUserInput()}>确定</button><br></br>\n                  </div>\n                  <div id=\"console2\" style={{display: this.state.initMeansRandom}}>\n                  请输入生成数组元素个数：<input placeholder=\"请输入1至20之间的数字\" id=\"randomNum\"/>\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.count(parseInt($('input#randomNum').val()))}>随机化</button>\n                  <br></br>\n                  </div>\n              </form>  \n            </div>\n        </div>\n        <div className=\"CodeBox\">\n                <div className=\"CodeTitle\">伪代码：</div>\n                <CodeBox preCodeArr={this.state.preCodeArr} hlp={this.state.hlp} sorting={this.state.sorting}></CodeBox>\n                <div className=\"CodeTitle\">代码：</div>\n                <IsCodeBox></IsCodeBox>\n        </div>\n      </div>\n    );\n  }\n  \n  getUserInput(){\n    this.stop();\n    var a=$('input#inputArray').val().split(\" \");\n    var len = a.length;\n    if(len > 20) len = 20;\n    var arr=[];\n    for (var i=0; i<len; ++i){\n      if(parseInt(a[i]) <= 50){\n        arr[i] = parseInt(a[i]);\n      }\n      else{\n        arr[i] = 50;\n      }\n    }\n    var oArr = [];\n    for (var j = 0; j<arr.length; j++){\n      oArr[j] = arr[j];\n    }\n    this.setState({\n      arr: arr,\n      arrStates: this.insertionSort(arr.slice()),\n      n: arr.length,\n      timeID: 0,\n      index: [],\n      interval: this.state.interval,\n      sorting: 0,\n      id: 0,\n      resetArr: oArr,\n      hlp: -1\n    })\n  }\n\n  getValue=(event)=>{\n    console.log(event.target.value);\n    if (event.target.value === '慢速') this.speed(500);\n    else if (event.target.value === '中速') this.speed(100);\n    else if (event.target.value === '极速') this.speed(1);\n  }\n\n  count(n){\n    this.stop();\n    if (n > 20) n = 20;\n    var arr = this.randomArr(n, this.state.r);\n    var oArr = [];\n    for (var i=0; i<n; i++){\n      oArr[i] = arr[i];\n    }\n    this.setState({\n      arr: arr,\n      arrStates: this.insertionSort(arr.slice()),\n      n: n,\n      timeID: 0,\n      index: [],\n      interval: this.state.interval,\n      sorting: 0,\n      id: 0,\n      resetArr: oArr,\n      hlp: -1\n    });\n  }\n  speed(speed) {\n    var arr = [];\n    for(var x = 0; x < this.state.n; x++){\n      arr[x] = this.state.arr[x];\n    }\n    var arrStates = this.state.arrStates;\n    if (this.state.sorting === 1) {\n      this.stop();\n      var timeID = setInterval(\n        () => this.sort(arrStates),\n        speed\n      );\n      this.setState({\n        timeID: timeID,\n        sorting: 1,\n        interval: speed\n      });\n    }else{\n      this.setState({\n        interval: speed\n      });\n    }\n\n  }\n\n\n  sort(arrStates) {\n    this.setState({sorting: 1})\n    if(this.state.id < arrStates.length){\n      const { arr: state, index: changing, highlight } = arrStates[this.state.id];\n      this.setState({ \n          arr: state,\n          index: changing,\n          hlp: highlight,\n          id: this.state.id + 1});}\n    else{this.stop();}\n    \n  }\n\n  revSort(arrStates) {\n    \n    if(this.state.id >= 1){\n      const { arr: state, index: changing, highlight } = arrStates[this.state.id];\n      this.setState({ \n          arr: state,\n          index: changing,\n          hlp: highlight,\n          id: this.state.id - 1});}\n    else{this.stop();}\n    \n  }\n\n  insertionSort(arr) {\n    var arrStates = [];\n    for (var i = 1; i < arr.length; i++) {\n      var index_insert = i;\n      const temp0 = { arr: arr.slice(), index:[i,i,index_insert], highlight: 0};\n      arrStates.push(temp0);\n      for (var j = i - 1; j >= 0; j--) {\n        const temp1 = { arr: arr.slice(), index:[i,j+1,index_insert], highlight: 1};\n        arrStates.push(temp1);\n        if(arr[j + 1] < arr[j]){\n          const temp0 = { arr: arr.slice(), index:[i,j+1,index_insert], highlight: 2};\n          arrStates.push(temp0);\n          const tempVal = arr[j];\n          arr[j] = arr[j + 1];\n          arr[j + 1] = tempVal;\n          index_insert = j;\n          const temp2 = { arr: arr.slice(), index:[i,j,index_insert], highlight: 2};\n          arrStates.push(temp2);\n        }\n        else{\n          const temp3 = { arr: arr.slice(), index:[i,j,index_insert], highlight: 3};\n          arrStates.push(temp3); \n          break;\n        }\n      } \n    }\n    return arrStates;\n } \n\n  start() {\n    var arr = [];\n    for(var x = 0; x < this.state.n; x++){\n      arr[x] = this.state.arr[x];\n    }\n    var arrStates = this.state.arrStates;\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID === 0 && (sorting === 0||sorting === 2)) {\n      timeID = setInterval(\n        () => this.sort(arrStates),\n        this.state.interval\n      );\n      this.setState({\n        timeID: timeID,\n        sorting: 1\n      });\n    }\n\n  }\n\n  nextstep(){\n    this.stop();\n    this.sort(this.state.arrStates);\n    this.setState({\n      sorting: 2\n    });\n  }\n\n  laststep(){\n    this.stop();\n    this.revSort(this.state.arrStates);\n    this.setState({\n      sorting: 2\n    });\n  }\n  \n\n  stop() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID !== 0 && sorting === 1) {\n      clearInterval(timeID);\n      this.setState({\n        timeID: 0,\n        sorting: 0,\n        hlp: -1\n      });\n    }\n\n  }\n  stop2() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID !== 0 && sorting === 1) {\n      clearInterval(timeID);\n      this.setState({\n        timeID: 0,\n        sorting: 2,\n      });\n    }\n  }\n}\n\nexport default InsertApp;\n","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Item from '../aItem/item';\n\n\nclass ItemList extends Component {\n\n    itemList(arr){\n\n        var itemList = [];\n        for(var i = 0; i < arr.length; i++){\n            var color = \"_arr\";\n            if(i === this.props.i){\n                color = \"_index\";\n            }\n            if(i===this.props.j){\n                color = \"_indexp\";\n            }\n            if(i in this.props.p){\n                color = \"_complete\";\n            }\n            if(this.props.sorting===0){\n                color = \"_arr\";\n            }\n            var item = (\n                <Item key={i} value={arr[i]} max={this.props.max} color={color} w={this.props.arr.length}></Item>\n            );\n            itemList.push(item);\n        }\n        return itemList;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"canvas _background\">\n                {this.itemList(this.props.arr)}\n            </div>\n        );\n    }\n}\n\nexport default ItemList;","import React, { Component } from 'react';\r\nimport '../aCss/app.css';\r\n\r\nclass BsCodeBox extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"CodeBox2\" id=\"scrollbar\">\r\n                <code className=\"code\">void bubbleSort(int a[], int n)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;for (int i = 0; i&nbsp;&lt;&nbsp;n; i++)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;for (int j = i + 1; j&nbsp;&lt;&nbsp;n; j++)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a[j] &lt; a[i])&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int temp = a[i];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i] = a[j];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j] = temp;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&#125;</code>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BsCodeBox;","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Code from '../aCode/code';\n\n\nclass CodeBox extends Component {\n\n    codeBox(preCodeArr){\n\n        var codebox = [];\n        for(var i = 0; i < preCodeArr.length; i++){\n            var flag = \"\";\n            if(i===this.props.hlp){\n                flag = \"_h\";\n            }\n            if(i !== this.props.hlp){\n                flag = \"\";\n            }\n            if(this.props.sorting===0){\n                flag = \"\";\n            }\n            var code = (\n                <Code key={i} value={preCodeArr[i]} highLightFlag={flag}></Code>\n            );\n            codebox.push(code);\n        }\n        return codebox;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"CodeBox1\" id=\"scrollbar\">\n                {this.codeBox(this.props.preCodeArr)}\n            </div>\n        );\n    }\n}\n\nexport default CodeBox;","import React, { Component } from 'react';\nimport '../aCss/app.css';\nimport ItemList from './itemList';\nimport BsCodeBox from './bsCodeBox'\nimport $ from \"jquery/dist/jquery.min\";\nimport CodeBox from './CodeBox';\n\nclass BubbleApp extends Component {\n  constructor(props) {\n    super(props);\n    var n = 15;\n    var r = 50;\n    var speed = 500;\n    var arr = this.randomArr(n, r);\n    var oArr = [];\n    for (var i=0; i<n; i++){\n      oArr[i] = arr[i];\n    }\n    var preCodeArr = ['for i = 0 to i = 末尾元素位置 - 1',\n                      '\\xa0\\xa0for j = i + 1 to j = 待排序元素末尾位置 - 1',\n                      '\\xa0\\xa0\\xa0\\xa0if a[j] < a[i]: 交换这两个元素的位置',\n                      '\\xa0\\xa0\\xa0\\xa0else continue;']\n    this.state = {\n      arr: arr,\n      // intArr: arr,\n      n: n,\n      r: r,\n      timeID: 0,\n      i: -1,\n      j: -1,\n      p: [],\n      interval: speed,\n      sorting: 0,\n      resetArr: oArr,\n      initMeansRandom: 'none',\n      initMeansInput: 'none',\n      speeds:['慢速', '中速', '极速'],\n      preCodeArr: preCodeArr,\n      hlp:-1,\n      id: 0\n    }\n  }\n\n  randomArr(n, r) {\n    var arr = [];\n    for (var i = 0; i < n; i++) {\n      var value = Math.floor(Math.random() * r) + 1;\n      arr.push(value)\n    }\n    return arr;\n  }\n\n  init() {\n    this.stop();\n    var arr = [];\n    for (var i=0; i<this.state.n; i++){\n      arr[i] = this.state.resetArr[i];\n    }\n    this.setState({\n      arr: arr,\n      n: this.state.n,\n      timeID: 0,\n      i: -1,\n      j: -1,\n      p: [],\n      interval: this.state.interval,\n      sorting: 0,\n      id: 0,\n      hlp: -1\n    });\n  }\n\n  changeInitMeansInput(){\n    this.setState({\n      initMeansInput: 'block',\n      initMeansRandom: 'none'\n    });\n  }\n\n  changeInitMeansRandom(){\n    this.setState({\n      initMeansInput: 'none',\n      initMeansRandom: 'block'\n    });\n  }\n\n  render() {\n    return (\n      <div className = \"app\">\n        {/* <div className=\"row\"> */}\n          <div className=\"Visualizer\">\n            <div className={\"tutorial\"+this.state.sorting}><code>i = {this.state.i}, j = {this.state.j}, a[i] = {this.state.arr[this.state.i]}, a[j] = {this.state.arr[this.state.j]}</code></div>\n            <div className=\"canvas\">\n              <ItemList arr={this.state.arr} max={this.state.r} i={this.state.i} j={this.state.j} p={this.state.p} sorting={this.state.sorting}></ItemList>\n            </div>\n            <div className=\"buttons\">\n              <form action=\"bubbleApp.js\">\n                  排序：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.start()}>冒泡排序</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.init()}>重置</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.stop2()}>暂停</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  单步：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.nextstep()}>下一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.laststep()}>上一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <br></br><br></br>\n                  生成数组方式：&nbsp;\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansRandom()}>随机化生成</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansInput()}>自定义数组</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                  排序速度：&nbsp;\n                    <select onChange={(e)=>this.getValue(e)}>\n                      {\n                        this.state.speeds.map((ele,index)=>{\n                          return(\n                            <option key={index}>{ele}</option>\n                          )\n                        })\n                      }\n                    </select>\n                  <br></br><br></br>\n                  <div id=\"console1\" style={{display: this.state.initMeansInput}}>\n                  请输入生成数组元素：<input placeholder=\"请输入至多20个不大于50的数字，用空格分隔\" maxLength = \"100\" size=\"50\" id=\"inputArray\"/>\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.getUserInput()}>确定</button><br></br>\n                  </div>\n                  <div id=\"console2\" style={{display: this.state.initMeansRandom}}>\n                  请输入生成数组元素个数：<input placeholder=\"请输入1至20之间的数字\" id=\"randomNum\"/>\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.count(parseInt($('input#randomNum').val()))}>随机化</button>\n                  <br></br>\n                  </div>\n              </form>  \n            </div>\n          </div>\n          <div className=\"CodeBox\">\n                <div className=\"CodeTitle\">伪代码：</div>\n                <CodeBox preCodeArr={this.state.preCodeArr} hlp={this.state.hlp} sorting={this.state.sorting}></CodeBox>\n                <div className=\"CodeTitle\">代码：</div>\n                <BsCodeBox></BsCodeBox>\n          </div>\n      </div>\n      \n    );\n  }\n\n  getUserInput(){\n    this.stop();\n    var a=$('input#inputArray').val().split(\" \");\n    var len = a.length;\n    if(len > 20) len = 20;\n    var arr=[];\n    for (var i=0; i<len; ++i){\n      if(parseInt(a[i]) <= 50){\n        arr[i] = parseInt(a[i]);\n      }\n      else{\n        arr[i] = 50;\n      }\n    }\n    var oArr = [];\n    for (var j = 0; j<arr.length; j++){\n      oArr[j] = arr[j];\n    }\n    this.setState({\n      arr: arr,\n      // intArr: arr,\n      n: arr.length,\n      timeID: 0,\n      i: -1,\n      j: -1,\n      p: [],\n      interval: this.state.interval,\n      sorting: 0,\n      resetArr: oArr,\n      id: 0\n    })\n  }\n\n  getValue=(event)=>{\n    // this.stop();\n    console.log(event.target.value);\n    // this.setState({\n    //   currentspeed: event.target.value\n    // })\n    if (event.target.value === '慢速') this.speed(500);\n    else if (event.target.value === '中速') this.speed(100);\n    else if (event.target.value === '极速') this.speed(1);\n  }\n\n  count(n){\n    this.stop();\n    if (n > 20) n = 20;\n    var arr = this.randomArr(n, this.state.r);\n    var oArr = [];\n    for (var i=0; i<n; i++){\n      oArr[i] = arr[i];\n    }\n    this.setState({\n      arr: arr,\n      n: n,\n      timeID: 0,\n      i: -1,\n      j: -1,\n      p: [],\n      interval: this.state.interval,\n      sorting: 0,\n      resetArr: oArr,\n      id: 0\n    });\n  }\n\n  speed(speed) {\n    if (this.state.sorting === 1) {\n      this.stop();\n      var timeID = setInterval(\n        () => this.sort(),\n        speed\n      );\n      this.setState({\n        timeID: timeID,\n        sorting: 1,\n        interval: speed\n      });\n    }else{\n      this.setState({\n        interval: speed\n      });\n    }\n\n  }\n\n  sort() {\n    var arr = [];\n    for(var x = 0; x < this.state.n; x++){\n      arr[x] = this.state.arr[x];\n    }\n    var arrStates = this.bubbleSort(arr);\n    if(this.state.id < arrStates.length){\n      const { arr: state, index1, index2, complete:p, highlight } = arrStates[this.state.id];\n      this.setState({ \n          arr: state,\n          i: index1,\n          j: index2,\n          p: p, \n          hlp: highlight,\n          id: this.state.id + 1});}\n    else{this.stop();}\n    \n  }\n\n  revSort() {\n    var arr = [];\n    for(var x = 0; x < this.state.n; x++){\n      arr[x] = this.state.arr[x];\n    }\n    var arrStates = this.bubbleSort(arr);\n    if(this.state.id >= 1){\n      const { arr: state, index1, index2, complete:p, highlight } = arrStates[this.state.id];\n      this.setState({ \n        arr: state,\n        i: index1,\n        j: index2,\n        p: p, \n        hlp: highlight,\n        id: this.state.id - 1});}\n    else{this.stop();}\n  }\n\n  bubbleSort(arr) {\n    var arrStates = [];\n    var p = [];\n    for (var i = 0; i < arr.length - 1; i++) {\n      const temp0 = { arr: arr.slice(), index1: i, complete: p.slice(), highlight: 0};\n      arrStates.push(temp0);\n\t\t\tfor(var j = i + 1; j < arr.length; j++){\n        const temp1 = { arr: arr.slice(), index1: i, index2: j, complete: p.slice(), highlight: 1};\n        arrStates.push(temp1);\n\t\t\t\tif(arr[j] < arr[i]){\n          // const temp0 = { arr: arr.slice(), index1: i, index2: j, complete: p.slice(), highlight: 2};\n          // arrStates.push(temp0);\n\t\t\t\t\tconst tempVal = arr[i];\n\t\t\t\t\tarr[i] = arr[j];\n\t\t\t\t\tarr[j] = tempVal;\n          const temp1 = { arr: arr.slice(), index1: i, index2: j, complete: p.slice(), highlight: 2};\n          arrStates.push(temp1);\n\t\t\t\t}\n        else{\n          const temp3 = { arr: arr.slice(), index1: i, index2: j, complete: p.slice(), highlight: 3};\n          arrStates.push(temp3);\n        }\n\t\t\t}\n      p.push(i);\n      const temp = { arr: arr.slice(), index1: i, index2: j, complete: p.slice(), highlight: -1};\n      arrStates.push(temp);\n\t\t}\n    i = -1;\n    j = -1;\n    const temp = { arr: arr.slice(), index1: i, index2: j, complete: arr.slice(), highlight: -1};\n    arrStates.push(temp);\n    return arrStates;\n}\n\n  start() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID === 0 && (sorting === 0 || sorting === 2)) {\n      timeID = setInterval(\n        () => this.sort(),\n        this.state.interval\n      );\n      this.setState({\n        timeID: timeID,\n        sorting: 1\n      });\n    }\n\n  }\n\n  nextstep(){\n    this.stop();\n    this.sort();\n    this.setState({\n      sorting: 2\n    });\n  }\n\n  laststep(){\n    this.stop();\n    this.revSort();\n    this.setState({\n      sorting: 2\n    });\n  }\n  /**\n     * 暂停\n     */\n  stop() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID !== 0 && sorting === 1) {\n      clearInterval(timeID);\n      this.setState({\n        timeID: 0,\n        sorting: 0,\n        hlp: -1\n      });\n    }\n\n  }\n  stop2() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID !== 0 && sorting === 1) {\n      clearInterval(timeID);\n      this.setState({\n        timeID: 0,\n        sorting: 2,\n      });\n    }\n\n  }\n\n}\n\nexport default BubbleApp;\n","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Item from '../aItem/item';\n\nclass ItemList extends Component {\n\n    itemList(arr){\n\n        var itemList = [];\n        for(var i = 0; i < arr.length; i++){\n            var color = \"_arr\";\n            if(i in this.props.p){\n                color = \"_complete\";\n            }\n            if(i === this.props.i){\n                color = \"_indexp\";\n            }\n            if(i===this.props.j && i !== this.props.i){\n                color = \"_index\";\n            }\n            if(this.props.sorting===0){\n                color = \"_arr\";\n            }\n            var item = (\n                <Item key={i} value={arr[i]} max={this.props.max} color={color} w={this.props.arr.length}></Item>\n            );\n            itemList.push(item);\n        }\n        return itemList;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"canvas _background\">\n                {this.itemList(this.props.arr)}\n            </div>\n        );\n    }\n}\n\nexport default ItemList;","import React, { Component } from 'react';\r\nimport '../aCss/app.css';\r\n\r\nclass SsCodeBox extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"CodeBox2\"  id=\"scrollbar\">\r\n                <code className=\"code\">void selectionSort(int a[], int n)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;for (int i = 0; i &lt; n; i++)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;int loc = i; </code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;for (int j = i + 1; j &lt; n; j++)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (a[j] &lt; a[loc]) loc = j; </code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;int temp = a[i];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;a[i] = a[loc];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;a[loc] = temp;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&#125;</code>\r\n            </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SsCodeBox;","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Code from '../aCode/code';\n\n\nclass CodeBox extends Component {\n\n    codeBox(preCodeArr){\n\n        var codebox = [];\n        for(var i = 0; i < preCodeArr.length; i++){\n            var flag = \"\";\n            if(i===this.props.hlp){\n                flag = \"_h\";\n            }\n            if(i !== this.props.hlp){\n                flag = \"\";\n            }\n            if(this.props.sorting===0){\n                flag = \"\";\n            }\n            var code = (\n                <Code key={i} value={preCodeArr[i]} highLightFlag={flag}></Code>\n            );\n            codebox.push(code);\n        }\n        return codebox;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"CodeBox1\" id=\"scrollbar\">\n                {this.codeBox(this.props.preCodeArr)}\n            </div>\n        );\n    }\n}\n\nexport default CodeBox;","import React, { Component } from 'react';\nimport ItemList from './itemList';\nimport SsCodeBox from './ssCodeBox';\nimport $ from \"jquery/dist/jquery.min\";\nimport CodeBox from './CodeBox';\n\nclass SelectApp extends Component {\n\n  constructor(proprs) {\n    super(proprs);\n    var n = 15;\n    var r = 50;\n    var speed = 500;\n    var arr = this.randomArr(n, r);\n    var oArr = [];\n    for (var i=0; i<n; i++){\n      oArr[i] = arr[i];\n    }\n    var preCodeArr = ['for i = 0 to i = 末尾元素位置: //a[i]是待交换的值',\n                      '\\xa0\\xa0for j = i + 1 to j = 末尾元素位置: //寻找待排序元素中最小值',\n                      '\\xa0\\xa0\\xa0\\xa0if a[j] < a[i]: 记录当前的a[j]的位置',\n                      '\\xa0\\xa0\\xa0\\xa0else: continue',\n                      '\\xa0\\xa0swap: 交换待排序元素最小值和a[i]的位置']\n    this.state = {\n      interval: speed,\n      sorting: 0,\n      arr: arr,\n      // intArr : arr,\n      n: n,\n      r: r,\n      timeID: 0,\n      i: -1,\n      j: -1,\n      p: [],\n      k: -1,\n      resetArr: oArr,\n      initMeansRandom: 'none',\n      initMeansInput: 'none',\n      speeds:['慢速', '中速', '极速'],\n      preCodeArr: preCodeArr,\n      hlp: -1,\n      id: 0\n    }\n\n  }\n  randomArr(n, r) {\n    var arr = [];\n    for (var i = 0; i < n; i++) {\n      var value = Math.floor(Math.random() * r) + 1;\n      arr.push(value)\n    }\n    return arr;\n  }\n\n  init() {\n    this.stop();\n    var arr = [];\n    for (var i=0; i<this.state.n; i++){\n      arr[i] = this.state.resetArr[i];\n    }\n    this.setState({\n      arr: arr,\n      n: this.state.n,\n      timeID: 0,\n      i: -1,\n      j: -1,\n      p: [],\n      k: -1,\n      interval: this.state.interval,\n      sorting: 0,\n      mixIndex:0,\n      minValue:arr[0],\n      resetArr: this.state.resetArr,\n      id: 0,\n      hlp: -1\n    });\n    \n  }\n\n  changeInitMeansInput(){\n    this.setState({\n      initMeansInput: 'block',\n      initMeansRandom: 'none'\n    });\n  }\n\n  changeInitMeansRandom(){\n    this.setState({\n      initMeansInput: 'none',\n      initMeansRandom: 'block'\n    });\n  }\n\n  render() {\n    return (\n      <div  className=\"app\">\n        <div className=\"Visualizer\">\n          <div className={\"tutorial\"+this.state.sorting}><code>i = {this.state.k}, j = {this.state.j}, a[j] = {this.state.arr[this.state.j]}, 目前最小值为a[{this.state.i}] = {this.state.arr[this.state.i]}</code></div>\n          <div className=\"canvas\">\n            <ItemList arr={this.state.arr} max={this.state.r} i={this.state.i} j={this.state.j} p={this.state.p} sorting={this.state.sorting}></ItemList>\n          </div>\n          <div className=\"buttons\">\n              <form action=\"selectApp.js\">\n                  排序：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.start()}>选择排序</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.init()}>重置</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.stop2()}>暂停</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  单步：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.nextstep()}>下一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.laststep()}>上一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <br></br><br></br>\n                  生成数组方式：&nbsp;\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansRandom()}>随机化生成</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansInput()}>自定义数组</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                  排序速度：&nbsp;\n                    <select onChange={(e)=>this.getValue(e)}>\n                      {\n                        this.state.speeds.map((ele,index)=>{\n                          return(\n                            <option key={index}>{ele}</option>\n                          )\n                        })\n                      }\n                    </select>\n                  <br></br><br></br>\n                  <div id=\"console1\" style={{display: this.state.initMeansInput}}>\n                  请输入生成数组元素：<input placeholder=\"请输入至多20个不大于50的数字，用空格分隔\" maxLength = \"100\" size=\"50\" id=\"inputArray\"/>\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.getUserInput()}>确定</button><br></br>\n                  </div>\n                  <div id=\"console2\" style={{display: this.state.initMeansRandom}}>\n                  请输入生成数组元素个数：<input placeholder=\"请输入1至20之间的数字\" id=\"randomNum\"/>\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.count(parseInt($('input#randomNum').val()))}>随机化</button>\n                  <br></br>\n                  </div>\n              </form>  \n            </div>\n        </div>\n        <div className=\"CodeBox\">\n                <div className=\"CodeTitle\">伪代码：</div>\n                <CodeBox preCodeArr={this.state.preCodeArr} hlp={this.state.hlp} sorting={this.state.sorting}></CodeBox>\n                <div className=\"CodeTitle\">代码：</div>\n                <SsCodeBox></SsCodeBox>\n        </div>\n      </div>\n    );\n  }\n\n  getUserInput(){\n    this.stop();\n    var a=$('input#inputArray').val().split(\" \");\n    var len = a.length;\n    if(len > 20) len = 20;\n    var arr=[];\n    for (var i=0; i<len; ++i){\n      if(parseInt(a[i]) <= 50){\n        arr[i] = parseInt(a[i]);\n      }\n      else{\n        arr[i] = 50;\n      }\n    }\n    var oArr = [];\n    for (var j = 0; j<arr.length; j++){\n      oArr[j] = arr[j];\n    }\n    this.setState({\n      arr: arr,\n      n: arr.length,\n      timeID: 0,\n      i: -1,\n      j: -1,\n      p: [],\n      k: -1,\n      interval: this.state.interval,\n      sorting: 0,\n      id: 0,\n      resetArr: oArr,\n      hlp: -1\n    })\n  }\n\n  getValue=(event)=>{\n    console.log(event.target.value);\n    if (event.target.value === '慢速') this.speed(500);\n    else if (event.target.value === '中速') this.speed(100);\n    else if (event.target.value === '极速') this.speed(1);\n  }\n\n  count(n){\n    this.stop();\n    if (n > 20) n = 20;\n    var arr = this.randomArr(n, this.state.r);\n    var oArr = [];\n    for (var i=0; i<n; i++){\n      oArr[i] = arr[i];\n    }\n    this.setState({\n      arr: arr,\n      n: n,\n      timeID: 0,\n      i: -1,\n      j: -1,\n      p: [],\n      k: -1,\n      interval: this.state.interval,\n      sorting: 0,\n      resetArr: oArr,\n      hlp: -1,\n      id: 0\n    });\n  }\n\n  speed(speed) {\n    if (this.state.sorting === 1) {\n      this.stop();\n      var timeID = setInterval(\n        () => this.sort(),\n        speed\n      );\n      this.setState({\n        timeID: timeID,\n        sorting: 1,\n        interval: speed\n      });\n    }else{\n      this.setState({\n        interval: speed\n      });\n    }\n\n  }\n\n  sort() {\n    var arr = [];\n    for(var x = 0; x < this.state.n; x++){\n      arr[x] = this.state.arr[x];\n    }\n    var arrStates = this.selectionSort(arr);\n    if(this.state.id < arrStates.length){\n      const { arr: state, index1, index2, index3, complete: p, highlight } = arrStates[this.state.id];\n      this.setState({ \n          arr: state,\n          i: index1,\n          j: index2,\n          p: p,\n          k: index3,\n          hlp: highlight,\n          id: this.state.id + 1});}\n    else{this.stop();}\n    \n  }\n\n  revSort() {\n    var arr = [];\n    for(var x = 0; x < this.state.n; x++){\n      arr[x] = this.state.arr[x];\n    }\n    var arrStates = this.selectionSort(arr);\n    if(this.state.id >= 1){\n      const { arr: state, index1, index2, index3, complete: p,highlight } = arrStates[this.state.id];\n      this.setState({ \n          arr: state,\n          i: index1,\n          j: index2,\n          p: p,\n          k: index3,\n          hlp: highlight,\n          id: this.state.id - 1});}\n    else{this.stop();}\n    \n  }\n\n  selectionSort(arr) {\n\n    let arrStates = [];\n    var p = [];\n    for (var i = 0; i < arr.length - 1; i++) {\n        var minId = i;\n        const temp0 = { arr: arr.slice(), index1: minId, index3: i, complete: p.slice(), highlight: 0};\n        arrStates.push(temp0);\n        for (let j = i + 1; j < arr.length; j++) {\n            const temp1 = { arr: arr.slice(), index1: minId, index2: j, index3: i, complete: p.slice(), highlight: 1};\n            arrStates.push(temp1);\n            if (arr[j] < arr[minId]) {\n                minId = j;\n                const temp2 = { arr: arr.slice(), index1: minId, index2: j, index3: i, complete: p.slice(), highlight: 2};\n                arrStates.push(temp2);\n            }\n            else{\n              const temp3 = { arr: arr.slice(), index1: minId, index2: j, index3: i, complete: p.slice(), highlight: 3};\n              arrStates.push(temp3);\n            }\n            \n        }\n        const temp1 = { arr: arr.slice(), index1: minId, index2: i, index3: i, complete: p.slice(), highlight: 4};\n        arrStates.push(temp1);\n        const tempVal = arr[i];\n        arr[i] = arr[minId];\n        arr[minId] = tempVal;\n        const temp2 = { arr: arr.slice(), index1: minId, index2: i, index3: i, complete: p.slice(), highlight: 4};\n        arrStates.push(temp2);\n        p.push(i);\n        const temp = { arr: arr.slice(), index1: minId, index2: i, index3: i, complete: p.slice(), highlight: 4};\n        arrStates.push(temp);\n    }\n    return arrStates;\n  }\n\n  start() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID === 0 && (sorting === 0||sorting ===2)) {\n      timeID = setInterval(\n        () => this.sort(),\n        this.state.interval\n      );\n      this.setState({\n        timeID: timeID,\n        sorting: 1\n      });\n    }\n\n  }\n\n  nextstep(){\n    this.stop();\n    this.sort();\n    this.setState({\n      sorting: 2\n    });\n  }\n\n  laststep(){\n    this.stop();\n    this.revSort();\n    this.setState({\n      sorting: 2\n    });\n  }\n  \n  stop() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID !== 0 && sorting === 1) {\n      clearInterval(timeID);\n      this.setState({\n        timeID: 0,\n        sorting: 0,\n        hlp: -1\n      });\n    }\n\n  }\n  stop2() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID !== 0 && sorting === 1) {\n      clearInterval(timeID);\n      this.setState({\n        timeID: 0,\n        sorting: 2,\n      });\n    }\n\n  }\n}\n\nexport default SelectApp;\n","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Item from '../aItem/item';\n\n\nclass ItemList extends Component {\n\n    itemList(arr){\n\n        var itemList = [];\n        for(var i = 0; i < arr.length; i++){\n            var color = \"_arr\";\n            if(i === this.props.p){\n                color = \"_complete\";\n            }\n            \n            if(i===this.props.i){\n                color = \"_indexp\";\n            }\n            if(i===this.props.j){\n                color = \"_index\";\n            }\n            if(this.props.sorting===0){\n                color = \"_arr\";\n            }\n            var item = (\n                <Item key={i} value={arr[i]} max={this.props.max} color={color} w={this.props.arr.length}></Item>\n            );\n            itemList.push(item);\n        }\n        return itemList;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"canvas _background\">\n                {this.itemList(this.props.arr)}\n            </div>\n        );\n    }\n}\n\nexport default ItemList;","import React, { Component } from 'react';\r\nimport '../aCss/app.css';\r\n\r\nclass QsCodeBox extends Component {\r\n\r\n    CodeBox(highlight)\r\n    {\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"CodeBox2\" id=\"scrollbar\">\r\n                    <code className=\"code\">int Paritition(int A[], int start, int end)</code>\r\n                    <code className=\"code\">&#123;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;int pivot = A[end];</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;int i = start - 1;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;for(j = start; j &lt; end; j++)&#123;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;if(A[j] &lt; pivot)&#123;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i = i + 1;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int temp = A[i];</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A[i] = A[j];</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A[j] = temp;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&#125;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;&#125;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;int temp = A[i + 1];</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;A[i + 1] = A[end];</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;A[end] = A[i + 1];</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;return i + 1;</code>\r\n                    <code className=\"code\">&#125;</code>\r\n                    <code className=\"code\">void QuickSort(int A[], int start, int end) //快排母函数</code>\r\n                    <code className=\"code\">&#123;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;if (start &lt; end) &#123;</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;int pivot = Paritition(A, start, end);</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;QuickSort(A, start, pivot - 1);</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;QuickSort(A, pivot + 1, end);</code>\r\n                    <code className=\"code\">&nbsp;&nbsp;&#125;</code>\r\n                    <code className=\"code\">&#125;</code>    \r\n            </div>\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default QsCodeBox;","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Code from '../aCode/code';\n\n\nclass CodeBox extends Component {\n\n    codeBox(preCodeArr){\n\n        var codebox = [];\n        for(var i = 0; i < preCodeArr.length; i++){\n            var flag = \"\";\n            if(i===this.props.hlp){\n                flag = \"_h\";\n            }\n            if(i !== this.props.hlp){\n                flag = \"\";\n            }\n            if(this.props.sorting===0){\n                flag = \"\";\n            }\n            var code = (\n                <Code key={i} value={preCodeArr[i]} highLightFlag={flag}></Code>\n            );\n            codebox.push(code);\n        }\n        return codebox;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"CodeBox1\" id=\"scrollbar\">\n                {this.codeBox(this.props.preCodeArr)}\n            </div>\n        );\n    }\n}\n\nexport default CodeBox;","import React, { Component } from 'react';\nimport '../aCss/app.css';\nimport ItemList from './itemList';\nimport QsCodeBox from './qsCodeBox'\nimport $ from \"jquery/dist/jquery.min\";\nimport CodeBox from './CodeBox';\n\n\nclass QuickApp extends Component {\n  constructor(props) {\n    super(props);\n    var n = 15;\n    var r = 50;\n    var speed = 800;\n    var arr = this.randomArr(n, r);\n    var oArr = arr;\n    for (var i=0; i<n; i++){\n      oArr[i] = arr[i];\n    }\n    var preCodeArr = ['Partition(A, start, end) //start、end为数组下标',\n                      '\\xa0\\xa0pivot = A[end]   //将最后一个元素作为主元素',\n                      '\\xa0\\xa0i = start - 1 // i指向的是比主元素小的位置',\n                      '\\xa0\\xa0for  j = start  to  end-1',\n                      '\\xa0\\xa0//从第一个元素开始到倒数第二个元素结束,比较确定主元素的位置',\n                      '\\xa0\\xa0\\xa0\\xa0if  A[j] < pivot',\n                      '\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0i = i + 1',\n                      '\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0swap:交换A[i]与A[j]',\n                      '\\xa0\\xa0\\xa0\\xa0//如果比主元素小,则把j位置上的元素提到主元素之前',\n                      '\\xa0\\xa0\\xa0\\xa0else continue',\n                      '\\xa0\\xa0swap:交换A[i + 1]与A[end]//最终确定主元的位置',\n                      '\\xa0\\xa0return i + 1//返回主元的位置',\n                      'end',\n                      'QuickSort(A,start,end)',\n                      '\\xa0\\xa0if start < end',\n                      '\\xa0\\xa0\\xa0\\xa0pivot = Partition(A, start, end)//确定划分位置',\n                      '\\xa0\\xa0\\xa0\\xa0QuickSort(A, start, pivot - 1)//排序左子数组',\n                      '\\xa0\\xa0\\xa0\\xa0QuickSort(A, pivot + 1, end)//排序右子数组',\n                      'end'];\n    this.state = {\n      arr: arr,\n      n: n,\n      r: r,\n      timeID: 0,\n      i: 0,\n      j: 0,\n      p: arr.length - 1,\n      interval: speed,\n      sorting: 0,\n      resetArr: oArr,\n      id: 0,\n      initMeansRandom: 'none',\n      initMeansInput: 'none',\n      speeds:['慢速', '中速', '极速'],\n      preCodeArr:preCodeArr,\n      hlp: -1\n    }\n\n  }\n\n  randomArr(n, r) {\n    var arr = [];\n    for (var i = 0; i < n; i++) {\n      var value = Math.floor(Math.random() * r) + 1;\n      arr.push(value)\n    }\n    return arr;\n  }\n\n  init() {\n    this.stop();\n    var arr = [];\n    for (var i=0; i<this.state.n; i++){\n      arr[i] = this.state.resetArr[i];\n    }\n    this.setState({\n      arr: arr,\n      n: this.state.n,\n      timeID: 0,\n      i: 0,\n      j: 0,\n      p: arr.length - 1,\n      interval: this.state.interval,\n      resetArr: this.state.resetArr,\n      sorting: 0,\n      id: 0,\n      hlp: -1\n    });\n  }\n\n  changeInitMeansInput(){\n    this.setState({\n      initMeansInput: 'block',\n      initMeansRandom: 'none'\n    });\n  }\n\n  changeInitMeansRandom(){\n    this.setState({\n      initMeansInput: 'none',\n      initMeansRandom: 'block'\n    });\n  }\n\n  render() {\n    return (\n      <div className = \"app\">\n          <div className=\"Visualizer\">\n            <div className={\"tutorial\"+this.state.sorting}><code>i = {this.state.i}, j = {this.state.j}, a[i] = {this.state.arr[this.state.i]}, a[j] = {this.state.arr[this.state.j]}, 基准值为a[{this.state.p}] = {this.state.arr[this.state.p]}</code></div>\n            <div className=\"canvas\">\n              <ItemList arr={this.state.arr} max={this.state.r} i={this.state.i} j={this.state.j} p={this.state.p} sorting={this.state.sorting}></ItemList>\n            </div>\n            <div className=\"buttons\">\n              <form action=\"quickApp.js\">\n                  排序：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.start()}>快速排序</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.init()}>重置</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.stop2()}>暂停</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  单步：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.nextstep()}>下一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.laststep()}>上一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                  <br></br><br></br>\n                  生成数组方式：&nbsp;\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansRandom()}>随机化生成</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansInput()}>自定义数组</button>&nbsp;&nbsp;&nbsp;&nbsp;\n                  排序速度：&nbsp;\n                    <select onChange={(e)=>this.getValue(e)}>\n                      {\n                        this.state.speeds.map((ele,index)=>{\n                          return(\n                            <option key={index}>{ele}</option>\n                          )\n                        })\n                      }\n                    </select>\n                  <br></br><br></br>\n                  <div id=\"console1\" style={{display: this.state.initMeansInput}}>\n                  请输入生成数组元素：<input placeholder=\"请输入至多20个不大于50的数字，用空格分隔\" maxLength = \"100\" size=\"50\" id=\"inputArray\"/>\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.getUserInput()}>确定</button><br></br>\n                  </div>\n                  <div id=\"console2\" style={{display: this.state.initMeansRandom}}>\n                  请输入生成数组元素个数：<input placeholder=\"请输入1至20之间的数字\" id=\"randomNum\"/>\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.count(parseInt($('input#randomNum').val()))}>随机化</button>\n                  <br></br>\n                  </div>\n              </form>  \n            </div>\n          </div>\n          <div className=\"CodeBox\">\n                <div className=\"CodeTitle\">伪代码：</div>\n                <CodeBox preCodeArr={this.state.preCodeArr} hlp={this.state.hlp} sorting={this.state.sorting}></CodeBox>\n                <div className=\"CodeTitle\">代码：</div>\n                <QsCodeBox></QsCodeBox>\n          </div>\n      </div>\n      \n    );\n  }\n\n  getUserInput(){\n    this.stop();\n    var a=$('input#inputArray').val().split(\" \");\n    var len = a.length;\n    if(len > 20) len = 20;\n    var arr=[];\n    for (var i=0; i<len; ++i){\n      if(parseInt(a[i]) <= 50){\n        arr[i] = parseInt(a[i]);\n      }\n      else{\n        arr[i] = 50;\n      }\n    }\n    var oArr = [];\n    for (var j = 0; j<arr.length; j++){\n      oArr[j] = arr[j];\n    }\n    this.setState({\n      arr: arr,\n      n: arr.length,\n      timeID: 0,\n      i: 0,\n      j: 0,\n      p: arr.length - 1,\n      interval: this.state.interval,\n      sorting: 0,\n      id: 0,\n      resetArr: oArr,\n      hlp: -1\n    })\n  }\n\n  getValue=(event)=>{\n    console.log(event.target.value);\n    if (event.target.value === '慢速') this.speed(800);\n    else if (event.target.value === '中速') this.speed(200);\n    else if (event.target.value === '极速') this.speed(1);\n  }\n\n  count(n){\n    this.stop();\n    if (n > 20) n = 20;\n    var arr = this.randomArr(n, this.state.r);\n    var oArr = [];\n    for (var i=0; i<n; i++){\n      oArr[i] = arr[i];\n    }\n    this.setState({\n      arr: arr,\n      n: n,\n      timeID: 0,\n      i: 0,\n      j: 0,\n      p: this.state.arr.length - 1,\n      interval: this.state.interval,\n      sorting: 0,\n      id: 0,\n      resetArr: oArr,\n      hlp: -1\n    });\n  }\n\n  speed(speed) {\n    if (this.state.sorting === 1) {\n      this.stop();\n      var timeID = setInterval(\n        () => this.sort(),\n        speed\n      );\n      this.setState({\n        timeID: timeID,\n        sorting: 1,\n        interval: speed\n      });\n    }else{\n      this.setState({\n        interval: speed\n      });\n    }\n\n  }\n\n  sort() {\n    var arr = [];\n    for(var x = 0; x < this.state.n; x++){\n      arr[x] = this.state.arr[x];\n    }\n    var arrStates = this.quickSortStates(arr);\n    if(this.state.id < arrStates.length){\n      const { arr: state, index1, index2, pivot, highlight } = arrStates[this.state.id];\n      this.setState({ \n          arr: state,\n          i: index1,\n          j: index2,\n          p: pivot, \n          hlp: highlight,\n          id: this.state.id + 1});}\n    else{this.stop();}\n    \n  }\n\n  revSort() {\n    var arr = [];\n    for(var x = 0; x < this.state.n; x++){\n      arr[x] = this.state.arr[x];\n    }\n    var arrStates = this.quickSortStates(arr);\n    if(this.state.id >= 1){\n      const { arr: state, index1, index2, pivot, highlight } = arrStates[this.state.id];\n      this.setState({ \n          arr: state,\n          i: index1,\n          j: index2,\n          p: pivot, \n          hlp: highlight,\n          id: this.state.id - 1});}\n    else{this.stop();}\n  }\n  \n  quickSortStates(arr) {\n    var arrStates = [];\n    this.qsHelper(arr, 0, arr.length - 1, arrStates);\n    return arrStates;\n  }\n  \n  qsHelper(arr, start, end, arrStates){\n    if (start < end) {\n      var pivot = this.partition(arr, start, end, arrStates);\n      this.qsHelper(arr, start, pivot - 1, arrStates);\n      this.qsHelper(arr, pivot + 1, end, arrStates);\n  }\n  }\n\n  partition(arr, start, end, arrStates) {\n    var pivot = arr[end];\n    const temp0 = { arr: arr.slice(), pivot: end, highlight: 0};\n    arrStates.push(temp0);\n\n    var i = start - 1;\n    const temp2 = { arr: arr.slice(), index1: i, pivot: end, highlight: 2};\n    arrStates.push(temp2);\n    for (let j = start; j < end; j++) {\n        const temp3 = { arr: arr.slice(), index1: i, index2: j, pivot: end, highlight: 3};\n        arrStates.push(temp3);\n        if (arr[j] < pivot) {\n           const temp5 = { arr: arr.slice(), index1: i, index2: j, pivot: end, highlight: 5};\n           arrStates.push(temp5);\n\n            i++;\n            const temp6 = { arr: arr.slice(), index1: i, index2: j, pivot: end, highlight: 6};\n            arrStates.push(temp6);\n\n            const temp1 = { arr: arr.slice(), index1: i, index2: j, pivot: end, highlight: 7};\n            arrStates.push(temp1);\n            const tempVal = arr[i];\n            arr[i] = arr[j];\n            arr[j] = tempVal;\n            const temp2 = { arr: arr.slice(), index1: i, index2: j, pivot: end, highlight: 7};\n            arrStates.push(temp2);\n        }\n        else{\n          const temp = { arr: arr.slice(), index1: i, index2: j, pivot: end, highlight: 9};\n          arrStates.push(temp);\n        }\n    }\n    const temp3 = { arr: arr.slice(), index1: i+1, index2: end, pivot: end, highlight: 10};\n    arrStates.push(temp3);\n    const tempVal = arr[i+1];\n    arr[i+1] = arr[end];\n    arr[end] = tempVal;\n    const temp4 = { arr: arr.slice(), index1: i+1, index2: end, pivot: end, highlight: 10};\n    arrStates.push(temp4);\n    return i + 1;\n }\n\n  start() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID === 0 && (sorting === 0||sorting === 2)) {\n      timeID = setInterval(\n        () => this.sort(),\n        this.state.interval\n      );\n      this.setState({\n        timeID: timeID,\n        sorting: 1\n      });\n    }\n\n  }\n\n  nextstep(){\n    this.stop();\n    this.sort();\n    this.setState({\n      sorting: 2\n    });\n  }\n\n  laststep(){\n    this.stop();\n    this.revSort();\n    this.setState({\n      sorting: 2\n    });\n  }\n  \n  stop() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID !== 0 && sorting === 1) {\n      clearInterval(timeID);\n      this.setState({\n        timeID: 0,\n        sorting: 0,\n        hlp: -1\n      });\n    }\n\n  }\n  stop2() {\n    var timeID = this.state.timeID;\n    var sorting = this.state.sorting;\n    if (timeID !== 0 && sorting === 1) {\n      clearInterval(timeID);\n      this.setState({\n        timeID: 0,\n        sorting: 2,\n      });\n    }\n  }\n\n}\n\nexport default QuickApp;\n","import React, { Component } from 'react';\nimport '../aItem/item.css';\nimport '../aCss/color.css';\n\nclass Item extends Component{\n    \n    render() {\n\n        var percent = (1-this.props.value / this.props.max)*100;\n        return (\n            <div className=\"shape position\" style={{ width: \"20px\" }}>\n                <div className={\"fill \"+this.props.color}>\n                    <div className=\"_background\"  style={{ height: percent+\"%\" }}></div>\n                </div>\n                <div className=\"arrayValue\">\n                    {this.props.value}\n                </div>\n            </div>\n          );\n    }\n\n  \n}\n\nexport default Item;","import React, { Component } from 'react';\r\nimport '../aCss/color.css';\r\nimport '../aCss/app.css';\r\nimport Item from './item';\r\n\r\n\r\nclass ItemList extends Component {\r\n\r\n    itemList(arr){\r\n\r\n        var itemList = [];\r\n        for(var i = 0; i < arr.length; i++){\r\n            if(this.props.id === 0)\r\n            {\r\n                var color = \"_arr\";\r\n                if(this.props.sorting === 0)\r\n                {\r\n                    color = \"_arr\"\r\n                }\r\n                if(i === this.props.index[0] && this.props.index[4] === 0)\r\n                {\r\n                    color = \"_index\"\r\n                }\r\n                if(i === this.props.index[1] && this.props.index[5] === 0)\r\n                {\r\n                    color = \"_indexp\"\r\n                }\r\n            }\r\n            else\r\n            {\r\n                color = \"_complete\";\r\n                if(this.props.sorting === 0)\r\n                {\r\n                    color = \"_complete\"\r\n                }\r\n                if(i === this.props.index[2] && this.props.index[3] === 0)\r\n                {\r\n                    color = \"_index\"\r\n                }\r\n                if(i === this.props.index[2] && this.props.index[3] === 1)\r\n                {\r\n                    color = \"_indexp\"\r\n                }\r\n            }\r\n            \r\n            var item = (\r\n                <Item key={i} value={arr[i]} max={this.props.max} color={color} w={this.props.arr.length}></Item>\r\n            );\r\n            itemList.push(item);\r\n        }\r\n        return itemList;\r\n    }\r\n\r\n    render() {\r\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\r\n        return (\r\n            <div className = \"canvas1 _background\">\r\n                {this.itemList(this.props.arr)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemList;","import React, { Component } from 'react';\r\nimport '../aCss/app.css';\r\n\r\nclass MsCodeBox extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"CodeBox2\" id=\"scrollbar\">\r\n                <code className=\"code\">void merge(int a[], int start, int mid, int end)</code>\r\n                <code className=\"code\">&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;int i = start;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;int j = mid + 1;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;int k = start;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;int aC[100];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;for(int i = 0; i &lt; end; ++i)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;aC[i] = a[i];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;while(i &lt;= mid && j &lt;= end)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(aC[i] &lt;= aC[j])</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[k++] = aC[i++];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[k++] = aC[j++];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;while(i &lt;= mid)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[k++] = aC[i++];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;while(j &lt;= end)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[k++] = aC[j++];</code>\r\n                <code className=\"code\">&nbsp;&nbsp;&#125;</code>\r\n                <code className=\"code\">&#125;</code>\r\n                <code className=\"code\">void mergeSort(int a[], int start, int end)&#123;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;if (start == end) return; </code>\r\n                <code className=\"code\">&nbsp;&nbsp;int mid = (start + end)/2;</code>\r\n                <code className=\"code\">&nbsp;&nbsp;mergeSort(a, start, mid); </code>\r\n                <code className=\"code\">&nbsp;&nbsp;mergeSort(a, mid + 1, end); </code>\r\n                <code className=\"code\">&nbsp;&nbsp;merge(a, start, mid, end); </code>\r\n                <code className=\"code\">&#125;</code>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MsCodeBox;","import React, { Component } from 'react';\nimport '../aCss/color.css';\nimport '../aCss/app.css';\nimport Code from '../aCode/code';\n\n\nclass CodeBox extends Component {\n\n    codeBox(preCodeArr){\n\n        var codebox = [];\n        for(var i = 0; i < preCodeArr.length; i++){\n            var flag = \"\";\n            if(i===this.props.hlp){\n                flag = \"_h\";\n            }\n            if(i !== this.props.hlp){\n                flag = \"\";\n            }\n            if(this.props.sorting===0){\n                flag = \"\";\n            }\n            var code = (\n                <Code key={i} value={preCodeArr[i]} highLightFlag={flag}></Code>\n            );\n            codebox.push(code);\n        }\n        return codebox;\n    }\n\n    render() {\n        //var arr = [53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35,53,96,84,75,62,35,15,42,85,96,85,73,51,42,53,96,84,75,62,35];\n        return (\n            <div className = \"CodeBox1\" id=\"scrollbar\">\n                {this.codeBox(this.props.preCodeArr)}\n            </div>\n        );\n    }\n}\n\nexport default CodeBox;","import React, { Component } from 'react';\r\nimport '../aCss/app.css';\r\nimport ItemList from './itemList';\r\nimport MsCodeBox from './msCodeBox'\r\nimport $ from \"jquery/dist/jquery.min\";\r\nimport CodeBox from './CodeBox';\r\n\r\nclass MergeApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var n = 16;\r\n    var r = 50;\r\n    var speed = 800;\r\n    var arr = this.randomArr(n, r);\r\n    var oArr = [];\r\n    for (var i=0; i<n; i++){\r\n      oArr[i] = arr[i];\r\n    }\r\n    var preCodeArr = ['merge(A,start,mid,end) //mid,end分别为两侧队伍尾部',\r\n                      '\\xa0\\xa0AC = copy(A) //复制数组A至AC',\r\n                      '\\xa0\\xa0i = start; //左侧队伍的头部指针,指向待比较元素',\r\n                      '\\xa0\\xa0j = mid + 1; //右侧队伍的头部指针,指向待比较元素',\r\n                      '\\xa0\\xa0k = start; //原数组指针,指向待填入的元素的位置',\r\n                      '\\xa0\\xa0while(i <= mid and j <= end)',\r\n                      '\\xa0\\xa0//当左侧队伍与右侧队伍均没有比较完成',\r\n                      '\\xa0\\xa0\\xa0\\xa0if(AC[i] <= AC[j]): A[k++] = AC[i++];',\r\n                      '\\xa0\\xa0\\xa0\\xa0else:A[k++] = AC[j++];',\r\n                      '\\xa0\\xa0\\xa0\\xa0//取较小元素填入原数组并调整参数',\r\n                      '\\xa0\\xa0while(i <= mid): A[k++] =AC[i++];',\r\n                      '\\xa0\\xa0//当左侧没有比较完成，填入原数组并调整参数',\r\n                      '\\xa0\\xa0while(j <= end): A[k++] =AC[j++];',\r\n                      '\\xa0\\xa0//当右侧没有比较完成，填入原数组并调整参数',\r\n                      'mergeSort(A,start,end)',\r\n                      '\\xa0\\xa0if (start == end) return //只有一个数时直接返回',\r\n                      '\\xa0\\xa0mid = (start + end)/2; //用mid划分两个区间',\r\n                      '\\xa0\\xa0mergeSort(A, start, mid); //对前半段进行归并排序',\r\n                      '\\xa0\\xa0mergeSort(A, mid+1, end); //对后半段进行归并排序',\r\n                      '\\xa0\\xa0merge(A, start, mid, end); //归并两个已经排好的区间',\r\n                      'end'];\r\n    this.state = {\r\n      arr: arr,\r\n      arrC: [],\r\n      n: n,\r\n      r: r,\r\n      timeID: 0,\r\n      index: [],\r\n      interval: speed,\r\n      sorting: 0,\r\n      resetArr: oArr,\r\n      id: 0,\r\n      initMeansRandom: 'none',\r\n      initMeansInput: 'none',\r\n      speeds:['慢速', '中速', '极速'],\r\n      preCodeArr: preCodeArr,\r\n      hlp: -1\r\n    }\r\n\r\n  }\r\n\r\n  randomArr(n, r) {\r\n    var arr = [];\r\n    for (var i = 0; i < n; i++) {\r\n      var value = Math.floor(Math.random() * r) + 1;\r\n      arr.push(value)\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  random(){\r\n    this.stop();\r\n    var arr = this.randomArr(this.state.n, this.state.r);\r\n    var oArr = [];\r\n    for (var i = 0; i < this.state.n; i++){\r\n      oArr[i] = arr[i];\r\n    }\r\n    this.setState({\r\n      arr: arr,\r\n      arrC: [],\r\n      n: this.state.n,\r\n      timeID: 0,\r\n      index: [],\r\n      interval: this.state.interval,\r\n      sorting: 0,\r\n      resetArr: oArr,\r\n      id: 0,\r\n      hlp: -1\r\n    });\r\n  }\r\n\r\n  init() {\r\n    this.stop();\r\n    var arr = [];\r\n    for (var i=0; i<this.state.n; i++){\r\n      arr[i] = this.state.resetArr[i];\r\n    }\r\n    this.setState({\r\n      arr: arr,\r\n      arrC: [],\r\n      n: this.state.n,\r\n      timeID: 0,\r\n      index: [],\r\n      interval: this.state.interval,\r\n      resetArr: this.state.resetArr,\r\n      sorting: 0,\r\n      id: 0,\r\n      hlp: -1\r\n    });\r\n  }\r\n\r\n  changeInitMeansInput(){\r\n    this.setState({\r\n      initMeansInput: 'block',\r\n      initMeansRandom: 'none'\r\n    });\r\n  }\r\n\r\n  changeInitMeansRandom(){\r\n    this.setState({\r\n      initMeansInput: 'none',\r\n      initMeansRandom: 'block'\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className = \"app\">\r\n          <div className=\"Visualizer0\">\r\n            <div className={\"tutorial\"+this.state.sorting}>\r\n              <code>i = {this.state.index[0]}, j = {this.state.index[1]}, AC[i] = {this.state.arr[this.state.index[0]]}, \r\n              AC[j] = {this.state.arr[this.state.index[1]]}, k = {this.state.index[2]}, A[k] = {this.state.arr[this.state.index[2]]}</code>\r\n            </div>\r\n            <div className=\"Visualizer1\">\r\n              {/* <div className=\"canvas\"> */}\r\n                <ItemList arr={this.state.arr} max={this.state.r} index={this.state.index} sorting={this.state.sorting} id={0}></ItemList>\r\n              {/* </div> */}\r\n              {/* <div className=\"canvas\"> */}\r\n                <ItemList arr={this.state.arrC} max={this.state.r} index={this.state.index} sorting={this.state.sorting} id={1}></ItemList>\r\n              {/* </div>  */}\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <form action=\"mergeApp.js\">\r\n                  排序：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.start()}>归并排序</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.init()}>重置</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.stop2()}>暂停</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                  单步：&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.nextstep()}>下一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.laststep()}>上一步</button><span >&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                  <br></br><br></br>\r\n                  生成数组方式：&nbsp;\r\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansRandom()}>随机化生成</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                  <button type=\"button\" className=\"btn-light\" onClick={() => this.changeInitMeansInput()}>自定义数组</button>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                  \r\n                  排序速度：&nbsp;\r\n                    <select onChange={(e)=>this.getValue(e)}>\r\n                      {\r\n                        this.state.speeds.map((ele,index)=>{\r\n                          return(\r\n                            <option key={index}>{ele}</option>\r\n                          )\r\n                        })\r\n                      }\r\n                    </select>\r\n                  <br></br><br></br>\r\n                  <div id=\"console1\" style={{display: this.state.initMeansInput}}>\r\n                  请输入生成数组元素：<input placeholder=\"请输入至多20个不大于50的数字，用空格分隔\" maxLength = \"100\" size=\"50\" id=\"inputArray\"/>\r\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.getUserInput()}>确定</button><br></br>\r\n                  </div>\r\n                  <div id=\"console2\" style={{display: this.state.initMeansRandom}}>\r\n                  请输入生成数组元素个数：<input placeholder=\"请输入1至20之间的数字\" id=\"randomNum\"/>\r\n                  &nbsp;&nbsp;<button type=\"button\" className=\"btn-light\" onClick={() => this.count(parseInt($('input#randomNum').val()))}>随机化</button>\r\n                  <br></br>\r\n                  </div>\r\n              </form>  \r\n            </div>\r\n            \r\n          </div>\r\n          <div className=\"CodeBox0\">\r\n                <div className=\"CodeTitle\">伪代码：</div>\r\n                <CodeBox preCodeArr={this.state.preCodeArr} hlp={this.state.hlp} sorting={this.state.sorting}></CodeBox>\r\n                <div className=\"CodeTitle\">代码：</div>\r\n                <MsCodeBox></MsCodeBox>\r\n          </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n  getUserInput(){\r\n    this.stop();\r\n    var a=$('input#inputArray').val().split(\" \");\r\n    var len = a.length;\r\n    if(len > 20) len = 20;\r\n    var arr=[];\r\n    for (var i=0; i<len; ++i){\r\n      if(parseInt(a[i]) <= 50){\r\n        arr[i] = parseInt(a[i]);\r\n      }\r\n      else{\r\n        arr[i] = 50;\r\n      }\r\n    }\r\n    var oArr = [];\r\n    for (var j = 0; j<arr.length; j++){\r\n      oArr[j] = arr[j];\r\n    }\r\n    this.setState({\r\n      arr: arr,\r\n      arrC: [],\r\n      n: arr.length,\r\n      timeID: 0,\r\n      index: [],\r\n      interval: this.state.interval,\r\n      sorting: 0,\r\n      id: 0,\r\n      resetArr: oArr,\r\n      hlp: -1\r\n    })\r\n  }\r\n\r\n  getValue=(event)=>{\r\n    console.log(event.target.value);\r\n    if (event.target.value === '慢速') this.speed(800);\r\n    else if (event.target.value === '中速') this.speed(200);\r\n    else if (event.target.value === '极速') this.speed(1);\r\n  }\r\n\r\n  count(n){\r\n    this.stop();\r\n    if (n > 20) n = 20;\r\n    var arr = this.randomArr(n, this.state.r);\r\n    var oArr = [];\r\n    for (var i = 0; i < n; i++){\r\n      oArr[i] = arr[i];\r\n    }\r\n    this.setState({\r\n      arr: arr,\r\n      arrC: [],\r\n      n: n,\r\n      timeID: 0,\r\n      index: [],\r\n      p: this.state.arr.length - 1,\r\n      interval: this.state.interval,\r\n      sorting: 0,\r\n      id: 0,\r\n      resetArr: oArr,\r\n      hlp: -1\r\n    });\r\n  }\r\n\r\n  speed(speed) {\r\n    if (this.state.sorting === 1) {\r\n      this.stop();\r\n      var timeID = setInterval(\r\n        () => this.sort(),\r\n        speed\r\n      );\r\n      this.setState({\r\n        timeID: timeID,\r\n        sorting: 1,\r\n        interval: speed\r\n      });\r\n    }else{\r\n      this.setState({\r\n        interval: speed\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  sort() {\r\n    var arr = [];\r\n    for(var x = 0; x < this.state.n; x++){\r\n      arr[x] = this.state.resetArr[x];\r\n    }\r\n    var arrStates = this.mergeSort(arr);\r\n    if(this.state.id < arrStates.length){\r\n      const { arr: state, index: changing, arrC: stateC, highlight } = arrStates[this.state.id];\r\n      this.setState({ \r\n          arr: state,\r\n          arrC: stateC,\r\n          index: changing, \r\n          hlp: highlight,\r\n          id: this.state.id + 1\r\n      } );\r\n    } \r\n    else{this.stop();}\r\n    \r\n  }\r\n\r\n  revSort() {\r\n    var arr = [];\r\n    for(var x = 0; x < this.state.n; x++){\r\n      arr[x] = this.state.resetArr[x];\r\n    }\r\n    var arrStates = this.mergeSort(arr);\r\n    if(this.state.id >= 1){\r\n      const { arr: state, index: changing, arrC: stateC, highlight } = arrStates[this.state.id];\r\n      this.setState({ \r\n          arr: state,\r\n          arrC: stateC,\r\n          index: changing, \r\n          hlp: highlight,\r\n          id: this.state.id - 1\r\n      } );\r\n    } \r\n    else{this.stop();}\r\n  }\r\n\r\n  mergeSort(arr) {\r\n    var arrStates = [];\r\n    this.mergeSortHelper(arr, 0, arr.length - 1, arrStates);\r\n    const temp = { arr: this.state.resetArr.slice(), index: [], arrC: arr.slice()};\r\n    arrStates.push( temp );\r\n    return arrStates;\r\n  }\r\n\r\n  mergeSortHelper(arr, start, end, arrStates) {\r\n    if (start === end) return;\r\n    const mid = Math.floor((start + end) / 2);\r\n    this.mergeSortHelper(arr, start, mid, arrStates);\r\n    this.mergeSortHelper(arr, mid + 1, end, arrStates);\r\n    this.merge( arr, start, mid, end, arrStates );\r\n  }\r\n\r\n  merge(arr, start, mid, end, arrStates) {\r\n  var k = start, i = start, j = mid + 1;\r\n  var arrC = arr.slice();\r\n  while ( i <= mid && j <= end )\r\n  {\r\n    const temp = { arr: arrC.slice(), index: [i, j, k, -1, 0, 0], arrC: arr.slice(0, k), highlight: 5};\r\n    arrStates.push( temp );\r\n    if ( arrC[i] <= arrC[j] )\r\n    {\r\n      arr[k] = arrC[i];\r\n      const temp = { arr: arrC.slice(), index: [i, j, k, 0, 0, 1], arrC: arr.slice(0, k + 1), highlight: 7};\r\n      arrStates.push( temp );\r\n      k++;\r\n      i++;\r\n    }\r\n    else\r\n    {\r\n      arr[k] = arrC[j];\r\n      const temp = { arr: arrC.slice(), index: [i, j, k, 1, 1, 0], arrC: arr.slice(0, k + 1), highlight: 8};\r\n      arrStates.push( temp );\r\n      k++;\r\n      j++;\r\n    }\r\n  }\r\n  while ( i <= mid )\r\n  {\r\n    arr[k] = arrC[i];\r\n    const temp = { arr: arrC.slice(), index: [i, j, k, 0, 0, 1], arrC: arr.slice(0, k + 1), highlight: 10};\r\n    arrStates.push(temp);\r\n    k++;\r\n    i++;\r\n  }\r\n  while ( j <= end )\r\n  {\r\n    arr[k] = arrC[j];\r\n    const temp = { arr: arrC.slice(), index: [i, j, k, 1, 1, 0], arrC: arr.slice(0, k + 1), highlight: 12};\r\n    arrStates.push(temp);\r\n    k++;\r\n    j++;\r\n  }\r\n  }\r\n\r\n  start() {\r\n    this.stop();\r\n    var timeID = this.state.timeID;\r\n      var sorting = this.state.sorting;\r\n    //   var arrStates = this.mergeSort(arr);\r\n    if (timeID === 0 && (sorting === 0||sorting === 2)) {\r\n      timeID = setInterval(\r\n        () => this.sort(),\r\n        this.state.interval\r\n      );\r\n      this.setState({\r\n        timeID: timeID,\r\n        sorting: 1\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  nextstep(){\r\n    this.stop();\r\n    this.sort();\r\n    this.setState({\r\n      sorting: 2\r\n    });\r\n  }\r\n\r\n  laststep(){\r\n    this.stop();\r\n    this.revSort();\r\n    this.setState({\r\n      sorting: 2\r\n    });\r\n  }\r\n  \r\n  stop() {\r\n    var timeID = this.state.timeID;\r\n    var sorting = this.state.sorting;\r\n    if (timeID !== 0 && sorting === 1) {\r\n      clearInterval(timeID);\r\n      this.setState({\r\n        timeID: 0,\r\n        sorting: 0,\r\n        hlp: -1\r\n      });\r\n    }\r\n\r\n  }\r\n  stop2() {\r\n    var timeID = this.state.timeID;\r\n    var sorting = this.state.sorting;\r\n    if (timeID !== 0 && sorting === 1) {\r\n      clearInterval(timeID);\r\n      this.setState({\r\n        timeID: 0,\r\n        sorting: 2,\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default MergeApp;\r\n","import React, { Component } from 'react';\r\nimport './Visualizer.css';\r\nimport InsertApp from './insertSort/insertApp';\r\nimport BubbleApp from './bubbleSort/bubbleApp';\r\nimport SelectApp from './selectSort/selectApp';\r\nimport QuickApp from './quickSort/quickApp';\r\nimport MergeApp from './mergeSort/mergeApp';\r\n\r\nclass Visualizer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        mode: 'main',\r\n        rendering: false,\r\n        sortingClicked: false,\r\n        aicount: 0,\r\n    };\r\n    // this.getFunctions = this.getFunctions.bind(this);\r\n    this.changeRenderingState = this.changeRenderingState.bind(this);\r\n}\r\n\r\nchangeRenderingState(rendering) {\r\n    this.setState({ rendering: rendering });\r\n}\r\n\r\nrender() {\r\n    let renderObj = null;\r\n    if (this.state.mode === 'bubblesort') {\r\n        renderObj = <BubbleApp setVisualizerRendering={this.changeRenderingState} getFunctions={this.getFunctions}></BubbleApp>;\r\n    }\r\n    else if (this.state.mode === 'insertsort') {\r\n      renderObj = <InsertApp setVisualizerRendering={this.changeRenderingState} getFunctions={this.getFunctions}></InsertApp>;\r\n    }\r\n    else if (this.state.mode === 'selectsort') {\r\n      renderObj = <SelectApp setVisualizerRendering={this.changeRenderingState} getFunctions={this.getFunctions}></SelectApp>;\r\n    }\r\n    else if (this.state.mode === 'quicksort') {\r\n        renderObj = <QuickApp setVisualizerRendering={this.changeRenderingState} getFunctions={this.getFunctions}></QuickApp>;\r\n      }\r\n    else if (this.state.mode === 'mergesort') {\r\n        renderObj = <MergeApp setVisualizerRendering={this.changeRenderingState} getFunctions={this.getFunctions}></MergeApp>;\r\n    }\r\n    else {\r\n        renderObj =\r\n            <div className=\"welbotron\">\r\n\r\n                <div className=\"container welc\">\r\n\r\n                    <h1 className='welcome'>Hello,sorting.</h1>\r\n                    <br></br>\r\n                    <p className=\"lead\">网站旨在于通过可视化排序的方式帮助理解常见的几个排序算法，</p>\r\n                    <p className=\"secondline lead\">点击下方目录，从你感兴趣的排序算法开始学习吧！</p>\r\n                    <table id = \"intro\">\r\n                        <tbody>\r\n                        <tr>\r\n                            <th>Algorithms</th>\r\n                            <th>Introduction</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className='mainpage-b' onClick={() => {\r\n                                    if (!this.state.rendering) {\r\n                                        this.setState({ mode: 'bubblesort', sortingClicked: true });\r\n                                    }\r\n                                }} data-toggle={this.state.sortingClicked}>\r\n                                    <span></span>\r\n                                    冒泡排序\r\n                                </div>\r\n                            </td>\r\n                            <td className = \"alintro\">\r\n                                “冒泡排序(Bubble Sort),是一种计算机科学领域的较简单的排序算法。\r\n                                它重复地走访过要排序的元素列,依次比较两个相邻的元素,如果顺序(如从大到小、首字母从Z到A)错误就把他们交换过来。\r\n                                走访元素的工作是重复地进行直到没有相邻元素需要交换,也就是说该元素列已经排序完成。\r\n                                这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端(升序或降序排列),\r\n                                就如同碳酸饮料中二氧化碳的气泡最终会上浮到顶端一样,故名“冒泡排序”。”\r\n                            </td>\r\n\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className='mainpage-b' onClick={() => {\r\n                                    if (!this.state.rendering) {\r\n                                        this.setState({ mode: 'insertsort',sortingClicked: true });\r\n                                    }\r\n                                }} data-toggle={this.state.sortingClicked}>\r\n                                    <span></span>\r\n                                    插入排序\r\n                                </div>\r\n                            </td>\r\n                            <td className = \"alintro\">\r\n                                “插入排序(Insertion Sort)，一般也被称为直接插入排序。\r\n                                对于少量元素的排序，它是一个有效的算法。\r\n                                插入排序是一种最简单的排序方法，它的基本思想是将一个记录插入到已经排好序的有序表中，\r\n                                从而一个新的、记录数增1的有序表。在其实现过程使用双层循环，\r\n                                外层循环对除了第一个元素之外的所有元素，\r\n                                内层循环对当前元素前面有序表进行待插入位置查找，并进行移动。”\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className='mainpage-b' onClick={() => {\r\n                                    if (!this.state.rendering) {\r\n                                    this.setState({ mode: 'selectsort',sortingClicked: true });\r\n                                    }\r\n                                }} data-toggle={this.state.sortingClicked}>\r\n                                    <span></span>\r\n                                    选择排序\r\n                                </div>\r\n                            </td>\r\n                            <td className = \"alintro\">\r\n                                “选择排序（Selection sort）是一种简单直观的排序算法。\r\n                                它的工作原理是：第一次从待排序的数据元素中选出最小（或最大）的一个元素，\r\n                                存放在序列的起始位置，然后再从剩余的未排序元素中寻找到最小（大）元素，\r\n                                然后放到已排序的序列的末尾。以此类推，直到全部待排序的数据元素的个数为零。”\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className='mainpage-b' onClick={() => {\r\n                                    if (!this.state.rendering) {\r\n                                    this.setState({ mode: 'bubblesort', sortingClicked: true });\r\n                                    }\r\n                                }} data-toggle={this.state.sortingClicked}>\r\n                                    <span></span>\r\n                                    快速排序\r\n                                </div>\r\n                            </td>\r\n                            <td className = \"alintro\">\r\n                                “快速排序(Quick Sort)是对冒泡排序的一种改进。\r\n                                它的基本思想是:任意选取一个数据(通常选用第一个或最后一个数据)作为关键数据,\r\n                                然后将所有比它小的数都移到它前面,所有比它大的数都移到它后面,\r\n                                从而将要排序的数据分割成独立的两部分,然后再按此方法对这两部分数据分别进行快速排序,\r\n                                整个排序过程可以递归进行,以此达到整个数据变成有序序列。”\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <div className='mainpage-b' onClick={() => {\r\n                                    if (!this.state.rendering) {\r\n                                        this.setState({ mode: 'mergesort',sortingClicked: true });\r\n                                    }\r\n                                }} data-toggle={this.state.sortingClicked}>\r\n                                    <span></span>\r\n                                    归并排序\r\n                                </div>\r\n                            </td>\r\n                            <td className = \"alintro\">\r\n                                “归并排序(Merge Sort)是建立在归并操作上的一种有效,稳定的排序算法,\r\n                                该算法是采用分治法(Divide and Conquer)的一个非常典型的应用。\r\n                                将已有序的子序列合并,得到完全有序的序列;即先使每个子序列有序,再使子序列段间有序。\r\n                                若将两个有序表合并成一个有序表,称为二路归并。”\r\n                            </td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n    }\r\n    if (this.state.mode === 'main');\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <button\r\n                    onClick={() => {\r\n                        if (!this.state.rendering) {\r\n                            this.setState({ mode: 'main' });\r\n                        }\r\n                    }}\r\n                    type=\"button\" className=\"btn btn-light navbtn\"\r\n                    disabled={this.state.rendering}\r\n                >主页</button>\r\n\r\n                <button\r\n                    onClick={() => {\r\n                        if (!this.state.rendering) {\r\n                            this.setState({ mode: 'bubblesort', currentAlgorithm: null, sortingClicked: true });\r\n                            // this.state.setAlgorithm(-1);\r\n                        }\r\n                    }}\r\n                    type=\"button\" className=\"btn btn-light navbtn\"\r\n                    // data-toggle={this.state.sortingClicked ? \"\" : \"modal\"} data-target=\"#sortingIntroModal\"\r\n                    disabled={this.state.rendering}\r\n                >冒泡排序</button>\r\n\r\n                <button\r\n                    onClick={() => {\r\n                        if (!this.state.rendering) {\r\n                            this.setState({ mode: 'insertsort',sortingClicked: true });\r\n                            // this.state.setAlgorithm(-1);\r\n                        }\r\n                    }}\r\n                    type=\"button\" className=\"btn btn-light navbtn\"\r\n                    // data-toggle={this.state.sortingClicked ? \"\" : \"modal\"} data-target=\"#sortingIntroModal\"\r\n                    disabled={this.state.rendering}\r\n                >插入排序</button>\r\n\r\n                <button\r\n                    onClick={() => {\r\n                        if (!this.state.rendering) {\r\n                            this.setState({ mode: 'selectsort',sortingClicked: true });\r\n                            // this.state.setAlgorithm(-1);\r\n                        }\r\n                    }}\r\n                    type=\"button\" className=\"btn btn-light navbtn\"\r\n                    // data-toggle={this.state.sortingClicked ? \"\" : \"modal\"} data-target=\"#sortingIntroModal\"\r\n                    disabled={this.state.rendering}\r\n                >选择排序</button>\r\n\r\n                <button\r\n                    onClick={() => {\r\n                        if (!this.state.rendering) {\r\n                            this.setState({ mode: 'quicksort',sortingClicked: true });\r\n                            // this.state.setAlgorithm(-1);\r\n                        }\r\n                    }}\r\n                    type=\"button\" className=\"btn btn-light navbtn\"\r\n                    // data-toggle={this.state.sortingClicked ? \"\" : \"modal\"} data-target=\"#sortingIntroModal\"\r\n                    disabled={this.state.rendering}\r\n                >快速排序</button>\r\n\r\n                <button\r\n                    onClick={() => {\r\n                        if (!this.state.rendering) {\r\n                            this.setState({ mode: 'mergesort', currentAlgorithm: null, sortingClicked: true });\r\n                            // this.state.setAlgorithm(-1);\r\n                        }\r\n                    }}\r\n                    type=\"button\" className=\"btn btn-light navbtn\"\r\n                    // data-toggle={this.state.sortingClicked ? \"\" : \"modal\"} data-target=\"#sortingIntroModal\"\r\n                    disabled={this.state.rendering}\r\n                >归并排序</button>\r\n            </nav>\r\n\r\n            <div>\r\n                {renderObj}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n    \r\n}\r\n\r\nexport default Visualizer;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Visualizer from './Visualizer';\nimport \"jquery/dist/jquery\"\nimport \"jquery/dist/jquery.min\"\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Visualizer></Visualizer>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}